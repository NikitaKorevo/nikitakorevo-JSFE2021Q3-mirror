(()=>{var e={779:()=>{console.log('\nScore: 147 / 160\n\n1. Часы и календарь +15\n[x] время выводится в 24-часовом формате, например: 21:01:00 +5\n[x] время обновляется каждую секунду - часы идут. Когда меняется одна из цифр, остальные при этом не меняют своё положение на странице (время не дёргается) +5\n[x] выводится день недели, число, месяц, например: "Воскресенье, 16 мая" / "Sunday, May 16" / "Нядзеля, 16 траўня" +5\nЯзык и формат вывода даты определяется языком приложения.\n[x] при изменении дня недели, даты, месяца эти данные меняются в приложении (в ходе кросс-чека этот пункт не проверяется)\n\n2. Приветствие +10\n[x] текст приветствия меняется в зависимости от времени суток (утро, день, вечер, ночь) +5\nс 6:00 до 11:59 - Good morning / Доброе утро / Добрай раніцы\nс 12:00 до 17:59 - Good afternoon / Добрый день / Добры дзень\nс 18:00 до 23:59 - Good evening / Добрый вечер / Добры вечар\nс 00:00 до 5:59 - Good night / Доброй/Спокойной ночи / Дабранач\n[x] при изменении времени суток, если в это время приложение открыто, меняется текст приветствия (в ходе кросс-чека этот пункт не проверяется)\n[x] пользователь может ввести своё имя. При перезагрузке страницы приложения имя пользователя сохраняется, данные о нём хранятся в local storage +5\n\n3. Смена фонового изображения +20\nПри загрузке или перезагрузке приложения фоновое изображение выбирается из расположенной на GitHub коллекции изображений.\nРепозиторий с изображениями необходимо форкнуть, и использовать изображения форкнутого репозитория, а не школьного.\nСами изображения желательно оптимизировать, например, конвертировать в формат WebP с целью уменьшения веса и увеличения скорости загрузки.\nТакже можно использовать свою собственную коллекцию изображений.\nСкачать картинки на компьютер и использовать локальные файлы нельзя.\n[x] ссылка на фоновое изображение формируется с учётом времени суток и случайного номера изображения (от 01 до 20) +5\nПример ссылки на фоновое изображение: https://raw.githubusercontent.com/rolling-scopes-school/stage1-tasks/assets/images/evening/18.jpg, здесь\nevening - время суток, другие значения afternoon, morning, night\n18 - рандомный (случайный) номер изображения, от 01 до 20.\n[x] изображения можно перелистывать кликами по стрелкам, расположенным по бокам экрана.\n[x] изображения перелистываются последовательно - после 18 изображения идёт 19 (клик по правой стрелке), перед 18 изображением идёт 17 (клик по левой стрелке) +5\n[x] изображения перелистываются по кругу: после двадцатого изображения идёт первое (клик по правой стрелке), перед 1 изображением идёт 20 (клик по левой стрелке) +5\n[x] при смене слайдов важно обеспечить плавную смену фоновых изображений. Не должно быть состояний, когда пользователь видит частично загрузившееся изображение или страницу без фонового изображения. Плавную смену фоновых изображений не проверяем: 1) при загрузке и перезагрузке страницы 2) при открытой консоли браузера 3) при слишком частых кликах по стрелкам для смены изображения +5\n\n4. Виджет погоды +15\n[x] город по умолчанию - Минск, пока пользователь не ввёл другой город\n[x] при перезагрузке страницы приложения указанный пользователем город сохраняется, данные о нём хранятся в local storage +5\n[x] для указанного пользователем населённого пункта выводятся данные о погоде, если их возвращает API\n[x] данные о погоде включают в себя: иконку погоды, описание погоды, температуру в °C, скорость ветра в м/с, относительную влажность воздуха в %. Числовые параметры погоды округляются до целых чисел +5\n[x] выводится уведомление об ошибке при вводе некорректных значений, для которых API не возвращает погоду (пустая строка или бессмысленный набор символов) +5\n\n5. Виджет цитата дня +10\n[x] при загрузке страницы приложения отображается рандомная цитата и её автор +5\nВ качестве источника цитаты можно использовать как API, так и созданный вами или найденный в интернете JSON-файл с цитатами и их авторами. API с цитатами не отличаются надёжностью и долговечностью, используемый в качестве источника цитат собственный JSON-файл гарантирует работоспособность вашего приложения. Запросы к JSON также осуществляются асинхронно, таким образом необходимые знания о работе с асинхронными запросами вы получите\n[x] при перезагрузке страницы цитата обновляется (заменяется на другую). Есть кнопка, при клике по которой цитата обновляется (заменяется на другую) +5\n\n6. Аудиоплеер +15\n[x] при клике по кнопке Play/Pause проигрывается первый трек из блока play-list, иконка кнопки меняется на Pause +3\n[x] при клике по кнопке Play/Pause во время проигрывания трека, останавливается проигрывание трека, иконка кнопки меняется на Play +3\n[x] треки можно пролистывать кнопками Play-next и Play-prev\n[x] треки пролистываются по кругу - после последнего идёт первый (клик по кнопке Play-next), перед первым - последний (клик по кнопке Play-prev) +3\n[x] трек, который в данный момент проигрывается, в блоке Play-list выделяется стилем +3\n[x] после окончания проигрывания первого трека, автоматически запускается проигрывание следующего. Треки проигрываются по кругу: после последнего снова проигрывается первый. +3\nДля удобства проверки треки возьмите небольшой продолжительности. Обрезать треки можно здесь: https://mp3cut.net/ru/\n[x] плейлист генерируется средствами JavaScript (в ходе кросс-чека этот пункт не проверяется)\n\n7. Продвинутый аудиоплеер (реализуется без использования библиотек) +20\n[x] примерные внешний вид и функциональность плеера https://howlerplayer.github.io/\n[x] добавлен прогресс-бар в котором отображается прогресс проигрывания +3\n[x] при перемещении ползунка прогресс-бара меняется текущее время воспроизведения трека +3\n[x] над прогресс-баром отображается название трека +3\n[x] отображается текущее и общее время воспроизведения трека +3\n[x] есть кнопка звука при клике по которой можно включить/отключить звук +2\n[x] добавлен регулятор громкости, при перемещении ползунка регулятора громкости меняется громкость проигрывания звука +3\n[x] можно запустить и остановить проигрывания трека кликом по кнопке Play/Pause рядом с ним в плейлисте +3\n\n8. Перевод приложения на два языка (en/ru или en/be) +15\nДля перевода приложения может использоваться библиотека, например, i18n или аналогичная.\n[x] переводится язык и меняется формат отображения даты +3\n[x] переводится приветствие и placeholder +3\n[x] переводится прогноз погоды в т.ч описание погоды (OpenWeatherMap API предоставляет такую возможность) и город по умолчанию +3\n[x] переводится цитата дня (используйте подходящий для этой цели API, возвращающий цитаты на нужном языке или создайте с этой целью JSON-файл с цитатами на двух языках) +3\n[ ] переводятся настройки приложения. При переключении языка приложения в настройках, язык настроек тоже меняется +3\n[x] не переводятся данные, которые вводит пользователь: имя, город, тег для получения фонового изображения от API\n\n9. Получение фонового изображения от API +10\nПункт считается выполненным, если фоновые изображения, полученные от API, отвечают требованиям к фоновым изображениям, указанным в пункте 3: их можно перелистывать кликами по стрелкам, обеспечивается плавная смена фоновых изображений, ссылка на фоновое изображение формируется с учётом времени суток, если пользователь не указал другие теги для их получения. Не проверяем и не реализуем последовательное перелистывание изображений и перелистывание изображений по кругу.\n[x] в качестве источника изображений может использоваться Unsplash API +5\n[x] в качестве источника изображений может использоваться Flickr API +5\n\n10. Настройки приложения +20\n[x] в настройках приложения можно указать язык приложения (en/ru или en/be) +3\n[x] в настройках приложения можно указать источник получения фото для фонового изображения: коллекция изображений GitHub, Unsplash API, Flickr API +3\n[x] если источником получения фото указан API, в настройках приложения можно указать тег/теги, для которых API будет присылает фото +3\nНапример, nature - фото про природу\n[x] в настройках приложения можно скрыть/отобразить любой из блоков, которые находятся на странице: время, дата, приветствие, цитата дня, прогноз погоды, аудиоплеер, список дел/список ссылок/ваш собственный дополнительный функционал +3\n[x] скрытие и отображение блоков происходит плавно, не влияя на другие элементы, которые находятся на странице, или плавно смещая их +3\n[x] настройки приложения сохраняются при перезагрузке страницы +5\n\n11. Дополнительный функционал на выбор +10\nДостаточно выполнить только один из предложенных пунктов на ваш выбор.\n[ ] ToDo List - список дел (как в оригинальном приложении) +10\n[ ] список ссылок (как в оригинальном приложении) +10\n[ ] свой собственный дополнительный функционал, по сложности аналогичный предложенным +10\n\n12. На основе созданного проекта вы можете создать расширение для Google Chrome без публикации его в интернет-магазине (в ходе кросс-чека этот пункт не проверяется и не оценивается)\n')}},t={};function n(a){var s=t[a];if(void 0!==s)return s.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,n),o.exports}(()=>{"use strict";let e;const t=document.querySelector(".time"),a=document.querySelector(".date"),s={weekday:"long",day:"numeric",month:"long"},o=document.querySelector(".greeting"),r=document.querySelector(".name"),c=document.querySelector("body"),i=document.querySelector(".slide-prev"),l=document.querySelector(".slide-next");let d;const u=document.querySelector(".weather-icon"),p=document.querySelector(".temperature"),m=document.querySelector(".weather-description"),g=document.querySelector(".city"),h=document.querySelector(".weather-error"),y=document.querySelector(".wind"),v=document.querySelector(".humidity"),x=document.querySelector(".quote"),S=document.querySelector(".author"),L=document.querySelector(".change-quote");let _;(()=>{if(null===localStorage.getItem("dataMomentum")){let e={userName:"",city:"Minsk",settings:{show:[{Time:"true"},{Date:"true"},{Greetings:"true"},{Quotes:"true"},{Weather:"true"},{Player:"true"}],appearance:[{Language:["en","ru"]},{WhatLanguage:"en"},{"Source for image":["github","unsplash API","flickr API"]},{"WhatSource for image":"github"}],inputTags:""}};localStorage.setItem("dataMomentum",JSON.stringify(e))}e=JSON.parse(localStorage.getItem("dataMomentum"))})();const f=()=>{localStorage.setItem("dataMomentum",JSON.stringify(e))},w=()=>{e=JSON.parse(localStorage.getItem("dataMomentum")),_!==e.settings.appearance[1][Object.keys(e.settings.appearance[1])]&&(_=e.settings.appearance[1][Object.keys(e.settings.appearance[1])],k(),N(),P())},k=()=>{_=e.settings.appearance[1][Object.keys(e.settings.appearance[1])];const n=new Date,o=n.toLocaleTimeString();let r;t.textContent=o,r="en"===_?n.toLocaleDateString("En-en",s):n.toLocaleDateString("Ru-ru",s),a.textContent=r,q(),setTimeout(k,1e3)},q=()=>{const t=(new Date).getHours(),n=b(t);o.textContent=n,r.value=e.userName,"en"===_?r.setAttribute("placeholder","[Enter name]"):r.setAttribute("placeholder","[Введите имя]")},b=e=>{let t=Math.floor(e/6);return 0===t?"en"===_?"Good night":"Спокойной ночи":1===t?"en"===_?"Good morning":"Доброе утро":2===t?"en"===_?"Good afternoon":"Добрый день":3===t?"en"===_?"Good evening":"Добрый вечер":void 0};k(),r.addEventListener("input",(t=>(t=>{e.userName=t.target.value,f()})(t)));const I=(e,t)=>Math.round(Math.random()*(t-e)+e),C=(t=0)=>{const n=e.settings.appearance[3][Object.keys(e.settings.appearance[3])],a=(new Date).getHours(),s=["night","morning","afternoon","evening"][Math.floor(a/6)],o=new Image;"github"===n&&(d||(d=I(1,20)),d=+d+t,d<1&&(d=20),d>20&&(d=1),d<10&&(d="0"+d),o.src=`https://raw.githubusercontent.com/NikitaKorevo/stage1-tasks/assets/images/${s}/${d}.jpg`,o.onload=()=>{c.style.backgroundImage=`url('https://raw.githubusercontent.com/NikitaKorevo/stage1-tasks/assets/images/${s}/${d}.jpg')`}),"unsplash API"===n&&(async()=>{const t=(new Date).getHours(),n=`nature,${["night","morning","afternoon","evening"][Math.floor(t/6)]}`;let a=e.settings.inputTags;""===a&&(a=n);const s=`https://api.unsplash.com/photos/random?orientation=landscape&query=${a}&client_id=ki5fGm6hKzQdY0k5zoWARxWTz1qedJ6eHeHRK9o2JvY`,o=await fetch(s),r=await o.json(),i=new Image;i.src=r.urls.regular,i.onload=()=>{c.style.backgroundImage=`url(${r.urls.regular})`}})(),"flickr API"===n&&(async()=>{const t=(new Date).getHours(),n=`nature,${["night","morning","afternoon","evening"][Math.floor(t/6)]}`;let a=e.settings.inputTags;""===a&&(a=n);const s=`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=a4f700468ac91700849cf21bb102fdc9&tags=${a}&extras=url_l&format=json&nojsoncallback=1`,o=await fetch(s),r=await o.json(),i=I(0,r.photos.photo.length),l=new Image;l.src=r.photos.photo[i].url_l,l.onload=()=>{c.style.backgroundImage=`url(${r.photos.photo[i].url_l})`}})()};C(),i.addEventListener("click",(()=>{C(-1)})),l.addEventListener("click",(()=>{C(1)}));const P=async()=>{try{h.textContent="";let t=e.city;const n=`https://api.openweathermap.org/data/2.5/weather?q=${t}&lang=${_}&appid=f2f4c08d30fe7eb6591c04a264ebd32a&units=metric`,a=await fetch(n),s=await a.json();g.value=t,u.classList="weather-icon owf",u.classList.add(`owf-${s.weather[0].id}`),p.textContent=`${Math.round(s.main.temp)}°C`,m.textContent=s.weather[0].description,"en"===_?(v.textContent=`Humidity: ${s.main.humidity}%`,y.textContent=`Wind speed: ${Math.round(s.wind.speed)} m/s`):(v.textContent=`Влажность: ${s.main.humidity}%`,y.textContent=`Скорость ветра: ${Math.round(s.wind.speed)} м/с`)}catch(e){h.textContent="en"===_?"city not found":"город не найден",p.textContent="",m.textContent="",v.textContent="",y.textContent=""}};P(),g.addEventListener("change",(t=>(t=>{let n=t.target.value;e.city=n,f(),P()})(t)));const N=async()=>{if("en"===_){const e="https://favqs.com/api/qotd",t=await fetch(e),n=await t.json();x.textContent=n.quote.body,S.textContent=n.quote.author}else{const e="./json/quotesRU.json",t=await fetch(e),n=await t.json(),a=I(0,60);x.textContent=n[a].text,S.textContent=n[a].author}};N(),L.addEventListener("click",N);const E=[{title:"Aqua Caelestis",src:"./assets/sounds/AquaCaelestis.mp3",duration:"00:40"},{title:"River Flows In You",src:"./assets/sounds/RiverFlowsInYou.mp3",duration:"01:37"},{title:"Summer Wind",src:"./assets/sounds/SummerWind.mp3",duration:"01:51"},{title:"Ennio Morricone",src:"./assets/sounds/EnnioMorricone.mp3",duration:"01:37"}],O=document.querySelector(".play-list"),j=document.querySelector(".play-prev"),M=document.querySelector(".play"),A=document.querySelector(".play-next"),$=document.createElement("audio"),W=document.querySelector(".progressbar-duration"),T=document.querySelector(".volume-level"),J=document.querySelector(".progressbar-volume-level"),G=document.querySelector(".timer"),D=document.querySelector(".name-track");let H=0,R=1;E.forEach((e=>{const t=document.createElement("li");t.classList.add("play-item"),t.textContent=e.title,O.append(t)})),G.textContent=`0:00 / ${E[0].duration}`,D.textContent=E[0].title;const F=()=>{M.classList.contains("pause")?(M.classList.remove("pause"),$.pause(),Y()):(M.classList.add("pause"),$.src=E[H].src,$.play(),Y())};M.addEventListener("click",(()=>F())),j.addEventListener("click",(()=>(H--,H<0&&(H=E.length-1),D.textContent=E[H].title,M.classList.add("pause"),$.src=E[H].src,$.play(),void Y())));const K=()=>{H++,H>=E.length&&(H=0),D.textContent=E[H].title,M.classList.add("pause"),$.src=E[H].src,$.currentTime=0,$.play(),Y()};A.addEventListener("click",(()=>K())),$.addEventListener("ended",(()=>{K()})),O.addEventListener("click",(e=>(e=>{const t=[...O.children].indexOf(e.target);H===t?(H=t,F()):(H=t-1,K())})(e)));const Y=()=>{for(let e=0;e<O.children.length;e++)e===H?O.children[e].classList.add("item-active"):(O.children[e].classList.remove("item-active"),O.children[e].classList.remove("playing"));$.paused?O.children[H].classList.remove("playing"):O.children[H].classList.add("playing")};Y();const z=e=>{if(3===$.networkState)return W.value=0;e&&($.currentTime=$.duration*(e.target.value/100));let t=Math.round($.currentTime%60),n=Math.round($.duration%60);return t<10&&(t="0"+t),n<10&&(n="0"+n),G.textContent=`${Math.floor($.currentTime/60)}:${t} / ${Math.floor($.duration/60)}:${n}`,W.value=$.currentTime/$.duration*100};$.addEventListener("timeupdate",(()=>z())),W.addEventListener("input",(e=>z(e))),T.addEventListener("click",(()=>{0===$.volume?("0"===R&&(R=1),$.volume=R,J.value=R,T.style.backgroundImage=""):($.volume=0,J.value=0,T.style.backgroundImage='url("./assets/svg/mute.svg")')})),J.addEventListener("input",(e=>(e=>{"0"===e.target.value?T.style.backgroundImage='url("./assets/svg/mute.svg")':T.style.backgroundImage="",R=e.target.value,$.volume=R})(e)));const Q=document.querySelector(".btn-settings"),U=document.querySelector(".settings"),B=document.querySelector(".settings__show"),V=document.querySelector(".settings__appearance");let X=JSON.parse(localStorage.getItem("dataMomentum")),Z=X.settings;const ee=document.querySelector(".time"),te=document.querySelector(".date"),ne=document.querySelector(".greeting-container"),ae=document.querySelector(".quotes"),se=document.querySelector(".weather"),oe=document.querySelector(".player"),re=document.querySelector(".appearance__tags"),ce=()=>{X.settings=Z,localStorage.setItem("dataMomentum",JSON.stringify(X))};Q.addEventListener("click",(()=>{U.classList.toggle("settings-opening")})),document.addEventListener("click",(e=>{U.classList.contains("settings-opening")&&!e.target.closest(".settings")&&e.target!==Q&&U.classList.remove("settings-opening")})),Z.show.forEach((e=>{const t=document.createElement("div");t.classList.add("show__container");const n=document.createElement("h4");n.textContent=Object.keys(e)[0],n.classList.add("show__subtitle");const a=document.createElement("div");a.classList.add("show__toggle");const s=document.createElement("span");s.classList.add("show__span-on"),s.textContent="on";const o=document.createElement("span");o.classList.add("show__span-line"),o.textContent=" | ";const r=document.createElement("span");r.classList.add("show__span-off"),r.textContent="off","true"===e[Object.keys(e)[0]]?s.classList.add("show__span-active"):r.classList.add("show__span-active"),a.append(s,o,r),t.append(n,a),B.append(t)})),B.addEventListener("click",(e=>(e=>{X=JSON.parse(localStorage.getItem("dataMomentum"));const t=e.target,n=[...B.children].indexOf(t.parentNode.parentNode)-1,a=t.parentNode.parentNode.children[0].textContent;t.classList.contains("show__span-on")&&(t.classList.add("show__span-active"),t.parentNode.children[2].classList.remove("show__span-active"),Z.show[n][a]="true",ce()),t.classList.contains("show__span-off")&&(t.classList.add("show__span-active"),t.parentNode.children[0].classList.remove("show__span-active"),Z.show[n][a]="false",ce()),de()})(e)));const ie=e=>{e.style.opacity="0",e.style.visibility="hidden"},le=e=>{e.style.opacity="1",e.style.visibility="visible"},de=()=>{Z.show.forEach((e=>{"Time"===Object.keys(e)[0]&&("true"===e[Object.keys(e)[0]]?le(ee):ie(ee)),"Date"===Object.keys(e)[0]&&("true"===e[Object.keys(e)[0]]?le(te):ie(te)),"Greetings"===Object.keys(e)[0]&&("true"===e[Object.keys(e)[0]]?le(ne):ie(ne)),"Quotes"===Object.keys(e)[0]&&("true"===e[Object.keys(e)[0]]?le(ae):ie(ae)),"Weather"===Object.keys(e)[0]&&("true"===e[Object.keys(e)[0]]?le(se):ie(se)),"Player"===Object.keys(e)[0]&&("true"===e[Object.keys(e)[0]]?le(oe):ie(oe))}))};de(),V.addEventListener("click",(e=>(e=>{X=JSON.parse(localStorage.getItem("dataMomentum"));const t=e.target,n=2*([...V.children].indexOf(t.parentNode.parentNode)-1)+1,a="What"+t.parentNode.parentNode.children[0].textContent;t.classList.contains("data-eng")&&(t.classList.add("appearance__span-active"),t.parentNode.children[2].classList.remove("appearance__span-active"),Z.appearance[n][a]="en",ce()),t.classList.contains("data-ru")&&(t.classList.add("appearance__span-active"),t.parentNode.children[0].classList.remove("appearance__span-active"),Z.appearance[n][a]="ru",ce()),t.classList.contains("data-github")&&(t.classList.add("appearance__span-active"),t.parentNode.children[2].classList.remove("appearance__span-active"),t.parentNode.children[4].classList.remove("appearance__span-active"),Z.appearance[n][a]="github",ce()),e.target.classList.contains("data-unsplash")&&(t.classList.add("appearance__span-active"),t.parentNode.children[0].classList.remove("appearance__span-active"),t.parentNode.children[4].classList.remove("appearance__span-active"),Z.appearance[n][a]="unsplash API",ce()),e.target.classList.contains("data-flickr")&&(t.classList.add("appearance__span-active"),t.parentNode.children[0].classList.remove("appearance__span-active"),t.parentNode.children[2].classList.remove("appearance__span-active"),Z.appearance[n][a]="flickr API",ce()),w()})(e))),re.addEventListener("input",(e=>{Z.inputTags=e.target.value,ce(),w()})),re.value=Z.inputTags,Z.appearance[1].WhatLanguage===document.querySelector(".data-eng").textContent&&document.querySelector(".data-eng").classList.add("appearance__span-active"),Z.appearance[1].WhatLanguage===document.querySelector(".data-ru").textContent&&document.querySelector(".data-ru").classList.add("appearance__span-active"),Z.appearance[3]["WhatSource for image"]===document.querySelector(".data-github").textContent&&document.querySelector(".data-github").classList.add("appearance__span-active"),Z.appearance[3]["WhatSource for image"]===document.querySelector(".data-unsplash").textContent&&document.querySelector(".data-unsplash").classList.add("appearance__span-active"),Z.appearance[3]["WhatSource for image"]===document.querySelector(".data-flickr").textContent&&document.querySelector(".data-flickr").classList.add("appearance__span-active"),n(779)})()})();